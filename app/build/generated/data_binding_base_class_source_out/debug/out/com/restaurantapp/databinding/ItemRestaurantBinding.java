// Generated by view binder compiler. Do not edit!
package com.restaurantapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.restaurantapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemRestaurantBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final ImageButton buttonBookmark;

  @NonNull
  public final ImageButton buttonFavorite;

  @NonNull
  public final ImageView imageViewRestaurant;

  @NonNull
  public final TextView textViewAddress;

  @NonNull
  public final TextView textViewCategory;

  @NonNull
  public final TextView textViewDescription;

  @NonNull
  public final TextView textViewName;

  @NonNull
  public final TextView textViewPhone;

  @NonNull
  public final TextView textViewPriceRange;

  @NonNull
  public final TextView textViewRating;

  @NonNull
  public final TextView textViewReviewCount;

  private ItemRestaurantBinding(@NonNull MaterialCardView rootView,
      @NonNull ImageButton buttonBookmark, @NonNull ImageButton buttonFavorite,
      @NonNull ImageView imageViewRestaurant, @NonNull TextView textViewAddress,
      @NonNull TextView textViewCategory, @NonNull TextView textViewDescription,
      @NonNull TextView textViewName, @NonNull TextView textViewPhone,
      @NonNull TextView textViewPriceRange, @NonNull TextView textViewRating,
      @NonNull TextView textViewReviewCount) {
    this.rootView = rootView;
    this.buttonBookmark = buttonBookmark;
    this.buttonFavorite = buttonFavorite;
    this.imageViewRestaurant = imageViewRestaurant;
    this.textViewAddress = textViewAddress;
    this.textViewCategory = textViewCategory;
    this.textViewDescription = textViewDescription;
    this.textViewName = textViewName;
    this.textViewPhone = textViewPhone;
    this.textViewPriceRange = textViewPriceRange;
    this.textViewRating = textViewRating;
    this.textViewReviewCount = textViewReviewCount;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemRestaurantBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemRestaurantBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_restaurant, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemRestaurantBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonBookmark;
      ImageButton buttonBookmark = ViewBindings.findChildViewById(rootView, id);
      if (buttonBookmark == null) {
        break missingId;
      }

      id = R.id.buttonFavorite;
      ImageButton buttonFavorite = ViewBindings.findChildViewById(rootView, id);
      if (buttonFavorite == null) {
        break missingId;
      }

      id = R.id.imageViewRestaurant;
      ImageView imageViewRestaurant = ViewBindings.findChildViewById(rootView, id);
      if (imageViewRestaurant == null) {
        break missingId;
      }

      id = R.id.textViewAddress;
      TextView textViewAddress = ViewBindings.findChildViewById(rootView, id);
      if (textViewAddress == null) {
        break missingId;
      }

      id = R.id.textViewCategory;
      TextView textViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (textViewCategory == null) {
        break missingId;
      }

      id = R.id.textViewDescription;
      TextView textViewDescription = ViewBindings.findChildViewById(rootView, id);
      if (textViewDescription == null) {
        break missingId;
      }

      id = R.id.textViewName;
      TextView textViewName = ViewBindings.findChildViewById(rootView, id);
      if (textViewName == null) {
        break missingId;
      }

      id = R.id.textViewPhone;
      TextView textViewPhone = ViewBindings.findChildViewById(rootView, id);
      if (textViewPhone == null) {
        break missingId;
      }

      id = R.id.textViewPriceRange;
      TextView textViewPriceRange = ViewBindings.findChildViewById(rootView, id);
      if (textViewPriceRange == null) {
        break missingId;
      }

      id = R.id.textViewRating;
      TextView textViewRating = ViewBindings.findChildViewById(rootView, id);
      if (textViewRating == null) {
        break missingId;
      }

      id = R.id.textViewReviewCount;
      TextView textViewReviewCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewReviewCount == null) {
        break missingId;
      }

      return new ItemRestaurantBinding((MaterialCardView) rootView, buttonBookmark, buttonFavorite,
          imageViewRestaurant, textViewAddress, textViewCategory, textViewDescription, textViewName,
          textViewPhone, textViewPriceRange, textViewRating, textViewReviewCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
