// Generated by view binder compiler. Do not edit!
package com.restaurantapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.chip.Chip;
import com.google.android.material.chip.ChipGroup;
import com.restaurantapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCategoryDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final Button buttonExecuteSearch;

  @NonNull
  public final ImageButton buttonSearch;

  @NonNull
  public final Chip chipAllSubCategories;

  @NonNull
  public final ChipGroup chipGroupSubCategories;

  @NonNull
  public final EditText editTextSearch;

  @NonNull
  public final LinearLayout layoutSearch;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewRestaurants;

  @NonNull
  public final HorizontalScrollView scrollViewSubCategories;

  @NonNull
  public final TextView textViewResultCount;

  @NonNull
  public final MaterialToolbar toolbar;

  private ActivityCategoryDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull Button buttonExecuteSearch,
      @NonNull ImageButton buttonSearch, @NonNull Chip chipAllSubCategories,
      @NonNull ChipGroup chipGroupSubCategories, @NonNull EditText editTextSearch,
      @NonNull LinearLayout layoutSearch, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewRestaurants,
      @NonNull HorizontalScrollView scrollViewSubCategories, @NonNull TextView textViewResultCount,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.buttonExecuteSearch = buttonExecuteSearch;
    this.buttonSearch = buttonSearch;
    this.chipAllSubCategories = chipAllSubCategories;
    this.chipGroupSubCategories = chipGroupSubCategories;
    this.editTextSearch = editTextSearch;
    this.layoutSearch = layoutSearch;
    this.progressBar = progressBar;
    this.recyclerViewRestaurants = recyclerViewRestaurants;
    this.scrollViewSubCategories = scrollViewSubCategories;
    this.textViewResultCount = textViewResultCount;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCategoryDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCategoryDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_category_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCategoryDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.appBarLayout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.buttonExecuteSearch;
      Button buttonExecuteSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonExecuteSearch == null) {
        break missingId;
      }

      id = R.id.buttonSearch;
      ImageButton buttonSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonSearch == null) {
        break missingId;
      }

      id = R.id.chipAllSubCategories;
      Chip chipAllSubCategories = ViewBindings.findChildViewById(rootView, id);
      if (chipAllSubCategories == null) {
        break missingId;
      }

      id = R.id.chipGroupSubCategories;
      ChipGroup chipGroupSubCategories = ViewBindings.findChildViewById(rootView, id);
      if (chipGroupSubCategories == null) {
        break missingId;
      }

      id = R.id.editTextSearch;
      EditText editTextSearch = ViewBindings.findChildViewById(rootView, id);
      if (editTextSearch == null) {
        break missingId;
      }

      id = R.id.layoutSearch;
      LinearLayout layoutSearch = ViewBindings.findChildViewById(rootView, id);
      if (layoutSearch == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewRestaurants;
      RecyclerView recyclerViewRestaurants = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewRestaurants == null) {
        break missingId;
      }

      id = R.id.scrollViewSubCategories;
      HorizontalScrollView scrollViewSubCategories = ViewBindings.findChildViewById(rootView, id);
      if (scrollViewSubCategories == null) {
        break missingId;
      }

      id = R.id.textViewResultCount;
      TextView textViewResultCount = ViewBindings.findChildViewById(rootView, id);
      if (textViewResultCount == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityCategoryDetailBinding((CoordinatorLayout) rootView, appBarLayout,
          buttonExecuteSearch, buttonSearch, chipAllSubCategories, chipGroupSubCategories,
          editTextSearch, layoutSearch, progressBar, recyclerViewRestaurants,
          scrollViewSubCategories, textViewResultCount, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
